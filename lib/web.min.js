var RequestController,auth_server,file_server,fs,http,io,libpath,mime,path,port,reqController,server,url;http=require("http"),libpath=require("path"),fs=require("fs"),url=require("url"),mime=require("mime"),path=".",port=8080,RequestController=function(){function a(){}return a.prototype.reqs=[],a.prototype.registerRequest=function(a,b,c){var d,e;return e=""+a+"-"+b,d={client:a,resource:b,id:e},this.io.sockets.emit("new_request",d),d.callback=c,this.reqs.push(d)},a.prototype.handleResponse=function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n;d=[],l=this.reqs;for(f=0,i=l.length;f<i;f++)c=l[f],c.id===a&&d.push(c);e=[],m=this.reqs;for(g=0,j=m.length;g<j;g++)c=m[g],c.id!==a&&e.push(c);this.reqs=e,n=[];for(h=0,k=d.length;h<k;h++)c=d[h],n.push(c.callback(b));return n},a.prototype.setIo=function(a){this.io=a},a.prototype.getAllRequests=function(){return this.reqs},a}(),reqController=new RequestController,auth_server=function(a,b){return a.method==="POST"&&a.url==="/requests"?(a.on("data",function(a){var c;return c=JSON.parse(a),reqController.registerRequest(c.client,c.resource,function(a){return b.writeHead(200,{"Content-Type":"text/plain"}),b.write(a),b.end()})}),!0):!1},file_server=function(a,b){var c,d;return d=url.parse(a.url).pathname,c=libpath.join(path,d),c==="./"&&(c+="html"),libpath.exists(c,function(a){if(!a){b.writeHead(404,{"Content-Type":"text/plain"}),b.write("404 Not Found\n"),b.end();return}return fs.statSync(c).isDirectory()&&(c+="/index.html"),fs.readFile(c,"binary",function(a,d){var e;if(a){b.writeHead(500,{"Content-Type":"text/plain"}),b.write(a+"\n"),b.end();return}return e=mime.lookup(c),b.writeHead(200,{"Content-Type":e}),b.write(d,"binary"),b.end()})})},server=http.createServer(function(a,b){return auth_server(a,b)||file_server(a,b)}).listen(port),io=require("socket.io").listen(server),io.sockets.on("connection",function(a){return a.emit("new_requests",reqController.getAllRequests()),a.on("approve",function(b){return reqController.handleResponse(b,"approve"),a.broadcast.emit("approve",{request_id:b})}),a.on("reject",function(b){return reqController.handleResponse(b,"reject"),a.broadcast.emit("reject",{request_id:b})})}),reqController.setIo(io)